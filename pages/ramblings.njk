---
pagination:
  data: collections.posts
  size: 5
  alias: postsPage
  reverse: true
permalink: "/ramblings/{{ pagination.pageNumber | plus(1) }}/"
eleventyExcludeFromCollections: true
---

{% extends "base.njk" %}

{% block content %}
  <h1>Virgil’s Ramblings</h1>

  <form id="searchForm" action="/ramblings/1/" method="get">
    <input
      type="text"
      name="q"
      placeholder="Search ramblings"
      value="{{ searchQuery | safe }}"
      aria-label="Search ramblings"
    />
    <select name="filter" aria-label="Filter by tag or category">
      <option value="">Filter by Tag or Category</option>
      <optgroup label="Tags">
        {% for tag in collections.tagList %}
          <option value="tag:{{ tag.slug }}" {% if filter == "tag:" + tag.slug %}selected{% endif %}>{{ tag.name }}</option>
        {% endfor %}
      </optgroup>
      <optgroup label="Categories">
        {% for cat in collections.categoryList %}
          <option value="category:{{ cat.slug }}" {% if filter == "category:" + cat.slug %}selected{% endif %}>{{ cat.name }}</option>
        {% endfor %}
      </optgroup>
    </select>
    <button type="submit">Search</button>
  </form>

  {% set searchQuery = "" %}
  {% set filter = "" %}

  {# Parse URL params for q and filter - only works if query string is passed in #}
  {% if page.url contains "?" %}
    {% set urlParams = page.url | split("?")[1] | split("&") %}
    {% for param in urlParams %}
      {% set kv = param | split("=") %}
      {% if kv[0] == "q" %}
        {% set searchQuery = kv[1] | urlDecode %}
      {% endif %}
      {% if kv[0] == "filter" %}
        {% set filter = kv[1] | urlDecode %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {# Filter posts based on search query and filter type #}
  {% set filteredPosts = postsPage | filter(post => {
    let matchQuery = true;
    let matchFilter = true;

    if (searchQuery) {
      const qLower = searchQuery.toLowerCase();
      matchQuery = post.data.title.toLowerCase().includes(qLower) ||
                   (post.data.description && post.data.description.toLowerCase().includes(qLower)) ||
                   (post.templateContent && post.templateContent.toLowerCase().includes(qLower));
    }

    if (filter) {
      const parts = filter.split(":");
      const type = parts[0];
      const value = parts[1];
      if (type == "tag") {
        matchFilter = post.data.tags && post.data.tags.some(t => t.toLowerCase() == value);
      } else if (type == "category") {
        matchFilter = post.data.categories && post.data.categories.some(c => c.toLowerCase() == value);
      }
    }

    return matchQuery && matchFilter;
  }) %}

  {% if filteredPosts.length == 0 %}
    <p>No ramblings found matching your search or filter.</p>
  {% else %}
    <ul>
      {% for post in filteredPosts %}
        <li>
          <a href="{{ post.url }}">{{ post.data.title }}</a> - <small>{{ post.date | readableDate }}</small>
          <p>{{ post.data.description | truncate(150) }}</p>
        </li>
      {% endfor %}
    </ul>
  {% endif %}

  <nav>
    {% if pagination.href.previous %}
      <a href="{{ pagination.href.previous }}{% if searchQuery or filter %}?q={{ searchQuery | urlEncode }}&filter={{ filter | urlEncode }}{% endif %}">← Previous</a>
    {% endif %}
    {% if pagination.href.next %}
      <a href="{{ pagination.href.next }}{% if searchQuery or filter %}?q={{ searchQuery | urlEncode }}&filter={{ filter | urlEncode }}{% endif %}">Next →</a>
    {% endif %}
  </nav>
{% endblock %}
